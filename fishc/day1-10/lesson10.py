'''
0. 自己动手试试看，并分析在这种情况下，向列表添加数据应当采用哪种方法比较好？
假设给定以下列表：

member = ['小甲鱼', '黑夜', '迷途', '怡静', '秋舞斜阳']

要求将列表修改为：

member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]

1. 利用 for 循环打印上边 member 列表中的每个内容，如图：

2. 上一题打印的样式不是很好，能不能修改一下代码打印成下图的样式呢？【请至少使用两种方法实现】

3.请写下这一节课你学习到的内容：格式不限，回忆并复述是加强记忆的好方式！
'''
# 不会
# 学习列表
member = ['小甲鱼', '黑夜', '迷途', '怡静', '秋舞斜阳']
# 方法1：使用insert()和append()方法修改列表
member.insert(1, 88)
member.insert(2, 90)
member.insert(5, 85)
member.insert(7, 90)
member.append(88)
# 方法2：重新创建一个同名字的列表覆盖
member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]
# 对于这种情况，明显是第二种方法看起来要好一些嘛。
# 不过对于大型的列表，第一种方法可能更合适，所以我们说永远没有最好的，只有最合适的
member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]
for each in member:
    print(each)

# 方法1
count = 0
length = len(member)
while count < length:
    print(member[count], member[count+1])
    count+=2

# 方法2
for each in range(len(member)):
    if each%2 == 0:
        print(member[each], member[each + 1])
# 注意，这道题和上节课的那道题有点儿不同，回答完请上机实验或参考答案
old = [1, 2, 3, 4, 5]
new = old
old = [6]
print(new)
# 如果不上机操作，你觉得会打印什么内容
# 会打印： [1, 2, 3, 4, 5]
